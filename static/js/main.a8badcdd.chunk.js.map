{"version":3,"sources":["App.js","components/Worthy.js","components/Granting.js","components/Router.js","serviceWorker.js","index.js"],"names":["App","state","wish","formFlag","inputChanged","event","_this","wishRef","current","value","setState","handleWish","preventDefault","React","createRef","redirectCode","this","console","log","react_default","a","createElement","Redirect","to","pathname","Fragment","className","onSubmit","id","type","name","ref","onChange","required","src","alt","Component","Worthy","deserveItRef","specficActionsRef","handleWorthy","target","hardWorking","decideWorthy","clarity","worthy","props","location","Granting","clarityMessage","message","image","href","Router","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","components_Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a8badcdd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    wish: \"\",\n    formFlag: false\n  }\n\n  inputChanged = (event)=> {\n    let wish = this.state.wish;\n    wish = this.wishRef.current.value;\n    this.setState({wish: wish});\n  } \n\n  handleWish = (event) => {\n    //disable page refresh on submit\n    event.preventDefault();\n\n    //route to Worthy.js\n    // this.props.history.push('/worthy-or-not');\n    let formFlag = this.state.formFlag;\n    formFlag = true;\n    this.setState({formFlag: formFlag});\n  }\n\n  wishRef = React.createRef();\n\n\n  render() { \n    let redirectCode;   \n    if(this.state.formFlag){\n      console.log(\"working\");\n      redirectCode = <Redirect to={{\n        pathname: '/worthy-or-not',\n        state: { wish: this.state.wish }\n    }}/>;\n      }\n    \n    return (\n      <>\n      <div className=\"container\">\n        <form onSubmit={this.handleWish} id=\"wish-form\">\n          <h3>What is your wish?</h3>\n          <input type=\"text\" name=\"wish\" ref={this.wishRef} onChange={this.inputChanged} required=\"true\"/>\n          <input type=\"submit\"/>\n        </form>\n      </div>\n      <img src=\"https://i.gifer.com/Hw2z.gif\" alt=\"thinking\"/>\n      {redirectCode}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Worthy extends React.Component{\r\n    state = {\r\n        formFlag: false\r\n    }\r\n\r\n    deserveItRef = React.createRef();\r\n    specficActionsRef = React.createRef();\r\n\r\n\r\n    handleWorthy = (event)=> {\r\n        if(event.target.value === \"Yes\"){\r\n            this.hardWorking = true;\r\n        }else{\r\n            this.hardWorking = false;\r\n        }\r\n    }\r\n\r\n    decideWorthy = (event) => {\r\n        this.clarity = false;\r\n\r\n        let specificActions = this.specficActionsRef.current.value;\r\n\r\n        if(specificActions !== \"\"){\r\n            this.clarity = true;\r\n        }\r\n\r\n        if(this.hardWorking && this.clarity){\r\n            this.worthy = true;\r\n        }else{\r\n            this.worthy = false;\r\n        }\r\n        // this.props.history.push('/granting');\r\n\r\n        event.preventDefault();\r\n\r\n        let formFlag = this.state.formFlag;\r\n        formFlag = true;\r\n        this.setState({formFlag});\r\n\r\n    }\r\n    render(){\r\n        if(this.state.formFlag){\r\n            return <Redirect to={\r\n                {pathname:'granting',\r\n                state: {wish: this.props.location.state.wish, worthy: this.worthy, clarity: this.clarity}\r\n        }}/>\r\n        }\r\n        return (\r\n            <form onSubmit={this.decideWorthy}>\r\n                <h3>Are you willing to put in the work?</h3>\r\n                <div onChange={this.handleWorthy}>\r\n                    <label><input type=\"radio\" name=\"deserve-it\" value=\"Yes\"/> Yes</label>\r\n                    <label><input type=\"radio\" name=\"deserve-it\" value=\"No\"/> No</label>\r\n                </div>\r\n                <h3>What specific actions are you taking?</h3>\r\n                <label><input type=\"text\" name=\"specific-actions\" ref={this.specficActionsRef}/></label>\r\n                <input type=\"submit\"/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Worthy;","import React from 'react';\r\n\r\nclass Granting extends React.Component{\r\n    \r\n    render(){\r\n        if(this.props.location.state.worthy){\r\n            this.message = \"Pretty Soon!\";\r\n            this.image = \"https://i2.wp.com/media.giphy.com/media/8fen5LSZcHQ5O/giphy.gif?w=736&ssl=1\";\r\n\r\n        }else{\r\n            this.message = \"It may take a while\";\r\n            this.image = \"https://www.patlive.com/blog/wp-content/uploads/2015/07/Homer-Simpson-Yelling.gif\";\r\n\r\n        }\r\n\r\n        let clarityMessage;\r\n        if(!this.props.location.state.clarity){\r\n            clarityMessage = <h4>Make a specific plan to speed up the shipping</h4>;\r\n        }else {\r\n            clarityMessage = <h4>Put in the hard work to speed up the shipping</h4>;\r\n        }\r\n\r\n        return (\r\n            <>\r\n            <h3>The Universe has began shipping your wish - {this.props.location.state.wish}</h3>\r\n            <h4>Expected time: {this.message}</h4>\r\n            <img src={this.image} alt=\"reaction\"/>\r\n            {clarityMessage}\r\n            <a href=\"/\">Ask for another wish</a>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Granting;","import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport App from '../App';\r\nimport Worthy from './Worthy';\r\nimport Granting from './Granting';\r\n\r\nclass Router extends React.Component{\r\n    render(){\r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={App}></Route>\r\n                    <Route path=\"/worthy-or-not\" component={Worthy}></Route>\r\n                    <Route path=\"/granting\" component={Granting}></Route>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Router;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\n// import Worthy from './components/Worthy';\nimport Router from './components/Router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}